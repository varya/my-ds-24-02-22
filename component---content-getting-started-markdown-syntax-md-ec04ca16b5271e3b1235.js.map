{"version":3,"sources":["webpack:///./content/getting-started/markdown-syntax.md"],"names":["_frontmatter","makeShortcode","name","props","console","warn","DoDontContainer","Do","Dont","ButtonDanger","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","src","alt","isMDXComponent"],"mappings":"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","file":"component---content-getting-started-markdown-syntax-md-ec04ca16b5271e3b1235.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/tool-starter/tool-starter/node_modules/@bridgetool/gatsby-theme-dev/src/components/ThemeComponents/layout.js\";\nimport { Caption } from '@bridgetool/gatsby-theme-dev';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst DoDontContainer = makeShortcode(\"DoDontContainer\");\nconst Do = makeShortcode(\"Do\");\nconst Dont = makeShortcode(\"Dont\");\nconst ButtonDanger = makeShortcode(\"ButtonDanger\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Header 1`}</h1>\n    <h2>{`Header 2`}</h2>\n    <h3>{`Haeder 3`}</h3>\n    <h4>{`Header 4`}</h4>\n    <h5>{`Header 5`}</h5>\n    <h6>{`Header 6`}</h6>\n    <h2>{`Lists`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Unordered 1`}</li>\n      <li parentName=\"ul\">{`Unordered 2`}</li>\n      <li parentName=\"ul\">{`Unordered 3`}</li>\n    </ul>\n    <ol>\n      <li parentName=\"ol\">{`Ordered 1`}</li>\n      <li parentName=\"ol\">{`Ordered 2`}</li>\n      <li parentName=\"ol\">{`Ordered 3`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Nested 1`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Nested 1.1`}</li>\n          <li parentName=\"ul\">{`Nested 1.2`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Nested 2`}</li>\n    </ul>\n    <dl>\n  <dt>Definition list 1</dt>\n  <dd>Description of item 1</dd>\n  <dt>Definition list 2</dt>\n  <dd>Description of item 2</dd>\n    </dl>\n    <h2>{`Horizontal Separator`}</h2>\n    <hr />\n    <h2>{`Quote`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`More on semantic markup:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"http://webaim.org/techniques/semanticstructure/\"\n          }}>{`Semantic Structure â€“ WebAIM`}</a></li>\n      </ul>\n    </blockquote>\n    <h2>{`Table`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`alt`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Passed through to alt on img tag`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`20`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`adds the `}<inlineCode parentName=\"td\">{`avatar-small`}</inlineCode>{` class if less than 24`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`src`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The source url of the avatar image`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`square`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Used to create a square avatar`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`Code block`}</h2>\n    <h3>{`Html code`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<input type=\"checkbox\" value=\"1\" checked />\n`}</code></pre>\n    <p>{`To provide the code blocks use the following markdown syntax. You can specify the language\nfor proper highlighting.`}</p>\n    <code>\n      {`\n${'```'}html\n<input type=\"checkbox\" value=\"1\" checked>\n${'```'}\n`}\n    </code>\n    <h3>{`Live example`}</h3>\n    <p>{`The code in the examples can be rendered so that they can be living!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<input type=\"checkbox\" value=\"1\" checked /> Label\n`}</code></pre>\n    <p>{`Merely add `}<inlineCode parentName=\"p\">{`live`}</inlineCode>{` attribute next to the language.`}</p>\n    <code>\n      {`\n${'```'}html live\n<input type=\"checkbox\" value=\"1\" checked> Label\n${'```'}\n`}\n    </code>\n    <h3>{`Example without code`}</h3>\n    <p>{`Or you can provide a living example of the component but hide its code.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\",\n        \"metastring\": \"live nocode\",\n        \"live\": true,\n        \"nocode\": true\n      }}>{`<input type=\"checkbox\" value=\"1\" checked /> Label\n`}</code></pre>\n    <p>{`This is done with an additional `}<inlineCode parentName=\"p\">{`nocode`}</inlineCode>{` attribute.`}</p>\n    <code>\n      {`\n${'```'}html live nocode\n<input type=\"checkbox\" value=\"1\" checked> Label\n${'```'}\n`}\n    </code>\n    <h3>{`React live examples`}</h3>\n    <p>{`Live examples work also with the linked React components. You can give a code\nexample and render its preview.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<AwesomeButton type=\"primary\">Primary</AwesomeButton>\n`}</code></pre>\n    <code>\n      {`\n${'```'}jsx live\n<AwesomeButton type=\"primary\">Primary</AwesomeButton>\n${'```'}\n`}\n    </code>\n    <p>{`Or you can choose to hide the code block leaving only the preview.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live nocode\",\n        \"live\": true,\n        \"nocode\": true\n      }}>{`<AwesomeButton type=\"primary\">Primary</AwesomeButton>\n`}</code></pre>\n    <code>\n      {`\n${'```'}jsx live nocode\n<AwesomeButton type=\"primary\">Primary</AwesomeButton>\n${'```'}\n`}\n    </code>\n    <p>{`And the code blocks alone work for React examples as well.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<AwesomeButton type=\"primary\">Primary</AwesomeButton>\n`}</code></pre>\n    <code>\n      {`\n${'```'}jsx\n<AwesomeButton type=\"primary\">Primary</AwesomeButton>\n${'```'}\n`}\n    </code>\n    <h2>{`Special blocks`}</h2>\n    <h3>{`Do and don't`}</h3>\n    <h4>{`With images`}</h4>\n    <DoDontContainer mdxType=\"DoDontContainer\">\n  <Do src=\"https://user-images.githubusercontent.com/586552/63106528-06de5100-bf51-11e9-8a5e-98583ed74874.png\" mdxType=\"Do\">\n    Use brief and direct communication\n  </Do>\n  <Dont src=\"https://user-images.githubusercontent.com/586552/63106527-06de5100-bf51-11e9-858c-72de6a5c728a.png\" mdxType=\"Dont\">\n    Don't use wordy and redundant copy\n  </Dont>\n    </DoDontContainer>\n    <h4>{`With HTML`}</h4>\n    <DoDontContainer mdxType=\"DoDontContainer\">\n  <Do mdxType=\"Do\">\n    Use brief and <b>direct communication</b>\n  </Do>\n  <Dont mdxType=\"Dont\">\n    Don't use wordy and redundant copy\n  </Dont>\n    </DoDontContainer>\n    <h4>{`With makrdown (TODO)`}</h4>\n    <DoDontContainer mdxType=\"DoDontContainer\">\n  <Do mdxType=\"Do\">\n    Use brief and direct communication **test**\n  </Do>\n  <Dont mdxType=\"Dont\">\n    Don't use wordy and redundant copy\n  </Dont>\n    </DoDontContainer>\n    <h3>{`Caption`}</h3>\n\n    <img alt=\"\" src=\"https://s3.us-west-2.amazonaws.com/photos.puppyspot.com/breeds/245/card/500000291_medium.jpg\" />\n    <Caption mdxType=\"Caption\">A beautiful husky puppy.</Caption>\n    <h2>{`React components from a global scope`}</h2>\n    <ButtonDanger mdxType=\"ButtonDanger\">Button Danger</ButtonDanger>\n    <h2>{`Live React`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Button>Button</Button>\n<ButtonDanger>Button Danger</ButtonDanger>\n<ButtonOutline>Button Outline</ButtonOutline>\n<ButtonPrimary>Button Primary</ButtonPrimary>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}